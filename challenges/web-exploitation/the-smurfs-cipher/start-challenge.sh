#!/bin/bash

# Variables
droplet_size='s-1vcpu-1gb'
distro_image='ubuntu-18-04-x64'

# Challenge 1 settings
external_port_1='80'
docker_port_1='80'
docker_image_1='docker.pkg.github.com/jameslowther/ucsec-workshops/xor-type-check:1.0'


# Colors
Col_Red='\033[1;31m'
Col_White='\033[1;37m'
Col_Default='\033[0;39m'
Col_Green='\033[1;32m'
Col_Cyan='\033[1;36m'

# Check if droplet currently exists
does_droplet_exist() {
    if [ "$(docker-machine ls -q $1 | grep $1)" ];
    then
        # 0 = true
        return 0
    else
        # 1 = false
        return 1
    fi
}

echo -e "${Col_White}Xor Type Check Challenge"
echo -e "${Col_White}------------------------"

# Check whether docker-machine exists
if ! [ -x "$(command -v docker-machine)" ];
then
    echo -e "${Col_Red}docker-machine not found. Make sure Docker is installed properly.${Col_Default}."
    exit 1
fi

# List existing docker machines
echo -e "${Col_Cyan}Listing docker machines:${Col_Default}"
docker-machine ls

# Prompt droplet specifications
echo -e "\n${Col_Cyan}Provide the details for the new Droplet:"
echo -n -e "${Col_White}Droplet name [xor-type-check]: ${Col_Default}"
read droplet_name
droplet_name=${droplet_name:-xor-type-check}

# Prompt for access token
while [ -z "$access_token" ]
do
    echo -n -e "${Col_White}DigitalOcean Personal Access Token: ${Col_Default}"
    read access_token
done

# Create the droplet
echo -e "${Col_Cyan}Creating droplet $droplet_name${Col_Default}"
docker-machine create --digitalocean-size $droplet_size --driver digitalocean --digitalocean-image $distro_image --digitalocean-access-token $access_token $droplet_name
if ! does_droplet_exist $droplet_name;
then
    echo -e "${Col_Red}Droplet '$droplet_name' not found. Installation failed. Check your DigitalOcean dashboard for more details${Col_Default}"
    exit 1
fi

# Get the Droplet's IP address
ip_address=$(docker-machine ip ${droplet_name})
echo -e "\n${Col_Green}Droplet successfully created. IP Address: $ip_address ${Col_White}"

# Set the docker-machine environment parameters according to the newly created droplet
echo -e "${Col_Cyan}Connecting to the new droplet${Col_Default}"
eval $(docker-machine env $droplet_name)

# Run the first docker container
echo -e "${Col_Cyan}Starting the first docker challenge${Col_Default}"
docker run -d -p $external_port_1:$docker_port_1 $docker_image_1

# Done
echo -e "\n${Col_White}You can now connect to your challenges at:\nhttp://$ip_address:$external_port_1"
echo -e "${Col_Green}done.${Col_Default}"