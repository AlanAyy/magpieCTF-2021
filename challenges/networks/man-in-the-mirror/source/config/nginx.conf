
worker_processes 1;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Default server definition
    server {
        listen [::]:8080 default_server;
        listen 8080 default_server;

        sendfile off;

        root /var/www/html;
        index index.php index.html;

        encrypted_session_key "FqNcca37nsvGH1t2es5hPTGVkHGgmvfJ";
        encrypted_session_iv "birdbirdbirdbird";

        location / {
            try_files /nonexistant /index.html;
        }

        location /index.html {            

            default_type text/html;
            set_decode_base32 $session $cookie_auth;
            set_decrypt_session $raw $session;

            content_by_lua_block {

                ngx.print("<!DOCTYPE html>")
                ngx.print("<html lang='en'><body>")
                ngx.print("<h1>Welcome!</h1>")

                if (not(ngx.var.raw == '') and ((os.time(os.date("!*t")) - math.floor(tonumber(ngx.var.raw))) <= 5)) then
                    ngx.print("<h2>Authorized with the proxy! The flag is: </h2>")
                    ngx.print("<p>magpie{m4n_1n_th3_m1ddl3}</p>")
                else
                    ngx.say("<h2>Sorry, you are not the proxy server! No flag for you!</h2>")
                end
                ngx.print("</body></html>")

            }
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
    
    # Include other server configs
    include /usr/local/openresty/nginx/sites/*.conf;
}
